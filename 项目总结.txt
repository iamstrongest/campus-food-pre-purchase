本项目虽然完成了预想设定，但是快做完之后，还是发现了许多不足之处，下面本人一一列举出来遇见的问题。
1. 烂用持久化存储，有些是不需要持久化存储的。导致结果就是后面想要修改，也最后不好推倒重来。虽然不影响代码的运行，但是这个缺点不好。
2. 用户新增评论或者回复，会导致网页刷新一次。虽然数据最后展示无误，但是从用户使用的角度来说，是很不友好的体验。
3. 后端代码用数组循环遍历，里面有异步操作，此处的异步操作是和数据库产生交互。先说一下没修改之前带来的问题，就是数据响有时候应不完整，
有时候又可以完整的响应，这明显是不对的。后续做出了修改，得到了解决。感触就是，永远要记得forEach不能使用async加await处理异步操作，是
没有用的。(这是来自我深沉的痛，找了很久的错误，无人指导的日子自学编程确实听心累的。)
4. 没有统一化查询的方式。有的地方使用了id查询，有的地方使用了昵称查询。导致自己的昵称发生了改变时，评论区自己的发言的昵称不会改变。
这个是本项目的一个痛点，因此在另外一个项目中，解决了这个问题。解决思路就是统一化，使用用户的id，进行一系列的用户操作。
5. 后端api一开始没有将各个api接口细分，导致全部在router.js中，代码臃肿，不利用阅读以及维护等。后续察觉到了，将代码进行了细化，根据
用户，商家，管理员，评论区，食物等划分。但是还是有问题，有些代码似乎遗漏了，没有写到api目录下的文件中，导致无法让后续使用者仔细阅读，
这确实是本人的失误。好在，大家只要启用app.js就行了(如果拆分都正确,就是启用app1.js了)。
6. 有些地方还是存在bug，这无法避免的。从大角度上来说，自己1个月的时间，写这些代码，无论是从体力还是脑力，都是一个很大的挑战。这算是
一个算是比较大的个人项目了。
7. 因为当初能力或多或少有些不足，考虑问题不是很全面，遗漏了一下功能没有写在前端，比如邮箱验证码等。但是后端的接口是写好了的，各位若是
有兴趣，可以试着玩一下。
8. 个人觉得，应该要生成购物车订单的，但是一刚开始却没有考虑到，属实大意了，但是也不是很有影响。


最后来个尾声：
这个项目完结的几乎完结，似乎将近已经2个月了才写来了姗姗来迟的总结(后面陆陆续续做了一些修改)。
无论怎么样，好也罢，坏也摆，自己埋着脸把这个项目写完了。
从使用角度来说，应该还是很大的，完全可以支撑起几个人的工作量。
11月末我写了一个uni-app，，在这个uni-app项目中，将我上个项目的不足几乎都解决了，还是比较欣慰的。
并且在有些代码写法上，也有所不同，能够有所收获。至于我uni-app项目啥时候开源，本人也不确定，说不就就哪天了呢。
希望能够帮助到大家，同时希望大家能够有所收获，谢谢！